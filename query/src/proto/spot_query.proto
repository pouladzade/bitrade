syntax = "proto3";
package spot_query;

service SpotQueryService {
  // Market queries
  rpc GetMarket(GetMarketRequest) returns (GetMarketResponse);
  rpc ListMarkets(ListMarketsRequest) returns (ListMarketsResponse);
  
  // Order queries
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  
  // Trade queries
  rpc ListTrades(ListTradesRequest) returns (ListTradesResponse);
  rpc GetUserTrades(GetUserTradesRequest) returns (GetUserTradesResponse);
  
  // Balance queries
  rpc GetWallet(GetWalletRequest) returns (GetWalletResponse);
  rpc ListWallets(ListWalletsRequest) returns (ListWalletsResponse);
  
  // Market stats
  rpc GetMarketStats(GetMarketStatsRequest) returns (GetMarketStatsResponse);
  
  // Fee treasury
  rpc GetFeeTreasury(GetFeeTreasuryRequest) returns (GetFeeTreasuryResponse);
}

message ProtoMarket {
  string id = 1;
  string base_asset = 2;
  string quote_asset = 3;
  string default_maker_fee = 4;
  string default_taker_fee = 5;
  int64 create_time = 6;
  int64 update_time = 7;
  string status = 8;
  string min_base_amount = 9;
  string min_quote_amount = 10;
  int32 price_precision = 11;
  int32 amount_precision = 12;
}

message GetMarketRequest {
  string market_id = 1;
}

message GetMarketResponse {
  ProtoMarket market = 1;
}

message PaginationRequest {
  int64 limit = 1;
  int64 offset = 2;
  string order_by = 3;
  string order_direction = 4; // "asc" or "desc"
}

message PaginationResponse {
  int64 total_count = 1;
  bool has_more = 2;
  int64 next_offset = 3;
}

// Update ListMarketsRequest
message ListMarketsRequest {
}

message ListMarketsResponse {
  repeated ProtoMarket markets = 1;
}

// Order messages
message ProtoOrder {
  string id = 1;
  string market_id = 2;
  string user_id = 3;
  string order_type = 4;
  string side = 5;
  string price = 6;
  string base_amount = 7;
  string quote_amount = 8;
  string maker_fee = 9;
  string taker_fee = 10;
  int64 create_time = 11;
  string remained_base = 12;
  string remained_quote = 13;
  string filled_base = 14;
  string filled_quote = 15;
  string filled_fee = 16;
  int64 update_time = 17;
  string status = 18;
  string client_order_id = 19;
  bool post_only = 20;
  string time_in_force = 21;
  int64 expires_at = 22;
}

message GetOrderRequest {
  string order_id = 1;
}

message GetOrderResponse {
  ProtoOrder order = 1;
}

message ProtoOrderFilter {
  optional string user_id = 1;
  optional string market_id = 2;
  optional string order_id = 3;
  optional string side = 4;
  optional string status = 5;
  optional string order_type = 6;
}

message ListOrdersRequest {
  optional ProtoOrderFilter filter = 1;
  optional PaginationRequest pagination = 2;
}

message ListOrdersResponse {
  repeated ProtoOrder orders = 1;
  PaginationResponse pagination = 2;
}

message ProtoTrade {
  string id = 1;
  int64 timestamp = 2;
  string market_id = 3;
  string price = 4;
  string base_amount = 5;
  string quote_amount = 6;
  string buyer_user_id = 7;
  string buyer_order_id = 8;
  string buyer_fee = 9;
  string seller_user_id = 10;
  string seller_order_id = 11;
  string seller_fee = 12;
  string taker_side = 13;
  bool is_liquidation = 14;
}

message ProtoTradeFilter {
    optional string market_id = 1;
    optional string buyer_order_id = 2;
    optional string seller_order_id = 3;
    optional string buyer_user_id = 4;
    optional string seller_user_id = 5;
    optional string taker_side = 6;
    optional bool is_liquidation = 7;
    optional int64 start_time = 8;
    optional int64 end_time = 9;
}

message ListTradesRequest {
  optional ProtoTradeFilter filter = 1;
  optional PaginationRequest pagination = 2;
}

message ListTradesResponse {
  repeated ProtoTrade trades = 1;
  PaginationResponse pagination = 2;
}

message GetUserTradesRequest {
  string user_id = 1;
  string market_id = 2; // Optional
  int64 start_time = 3;
  int64 end_time = 4;
  PaginationRequest pagination = 5;
}

message GetUserTradesResponse {
  repeated ProtoTrade trades = 1;
  PaginationResponse pagination = 2;
}

// Balance messages
message ProtoWallet {
  string user_id = 1;
  string asset = 2;
  string available = 3;
  string locked = 4;
  string reserved = 5;
  string total_deposited = 6;
  string total_withdrawn = 7;
  int64 update_time = 8;
}

message GetWalletRequest {
  string user_id = 1;
  string asset = 2;
}

message GetWalletResponse {
  ProtoWallet wallet = 1;
}

message ProtoWalletFilter { 
  optional string user_id = 1;
  optional string asset = 2;
}

message ListWalletsRequest {
  optional ProtoWalletFilter filter = 1;
  optional PaginationRequest pagination = 2;
}

message ListWalletsResponse {
  repeated ProtoWallet wallets = 1;
  PaginationResponse pagination = 2;
}

// Market stats messages
message ProtoMarketStats {
  string market_id = 1;
  string high_24h = 2;
  string low_24h = 3;
  string volume_24h = 4;
  string price_change_24h = 5;
  string last_price = 6;
  int64 last_update_time = 7;
}

message GetMarketStatsRequest {
  string market_id = 1;
}

message GetMarketStatsResponse {
  ProtoMarketStats stats = 1;
}

// Fee treasury messages
message ProtoFeeTreasury {
  string treasury_address = 1;
  string market_id = 2;
  string asset = 3;
  string collected_amount = 4;
  int64 last_update_time = 5;
}

message GetFeeTreasuryRequest {
  string market_id = 1;
  string asset = 2;
}

message GetFeeTreasuryResponse {
  ProtoFeeTreasury treasury = 1;
} 